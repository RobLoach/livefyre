<?php
/**
 * @file
 *  Display Livefyre comments.
 */

/**
 * Define the zor library Livefyre will pull down from.
 */
define('LF_ZOR', 'http://zor.livefyre.com/wjs/v3.0/javascripts/livefyre.js');

/**
 * Include the Livefyre API
 */
include_once 'livefyre-api/libs/php/Livefyre.php';

/**
 * Implements hook_help().
 */
function livefyre_help($path, $arg) {
  switch ($path) {
    case 'admin/help#livefyre':
      return '<p>' . t('Implements Livefyre Comments 3') . '</p>';
      break;
  }
}

/**
 * Implements hook_menu().
 */
function livefyre_menu() {
  $items = array();

  $items['admin/config/livefyre'] = array(
    'title' => 'Livefyre',
    'description' => 'Configure livefyre comments',
    'access arguments' => array('administer livefyre comments'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('livefyre_admin_settings_form'),
    'file' => 'livefyre.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function livefyre_permission() {
  return array(
    'administer livefyre comments' => array(
      'title' => t('Administer Livefyre Comments'),
      'description' => t('Allow a user to administer Livefyre Comments.'),
    ),
    'add livefyre html' => array(
      'title' => t('Add Livefyre HTML'),
      'description' => t('Allow a user to add "extra" html, js and/or css which doesn\'t have to originate from Livefyre.'),
    ),
    'access livefyre comments' => array(
      'title' => t('Access Livefyre comments'),
      'description' => t('Use Livefyre comments on the site.'),
    ),
    'bypass livefyre comments visibility settings' => array(
      'title' => t('Bypass Livefyre comments visibility settings'),
      'description' => t('Show Livefyre comment fields, regardless of the field settings.'),
    ),
  );
}

/**
 * Implements hook_block_info().
 */
function livefyre_block_info() {
  return array(
    'livefyre_comments' => array(
      'info' => t('Livefyre Comments'),
      'cache' => DRUPAL_NO_CACHE,
    ),
  );
}

/**
 * Implements hook_field_info().
 */
function livefyre_field_info() {
  return array(
    'livefyre' => array(
      'label' => t('Livefyre'),
      'description' => t('This field stores that the Livefyre comment is enabled or not.'),
      'default_widget' => 'livefyre_checkbox',
      'default_formatter' => 'livefyre_full',
      'instance_settings' => array(
        'livefyre_settings_hide' => 0,
      ),
    ),
  );
}

/**
 * Implements hook_field_formatter_info().
 */
function livefyre_field_formatter_info() {
  return array(
    'livefyre_full' => array(
      'label' => t('Full'),
      'description' => t('Shows the full comment stream'),
      'field types' => array('livefyre'),
    ),
    'livefyre_comments_number' => array(
      'label' => t('Comments number'),
      'description' => t('Shows only the number of comments'),
      'field types' => array('livefyre'),
    ),
  );
}

/**
 * Implements hook_field_formatter_view().
 */
function livefyre_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  list($id, $vid, $bundle) = entity_extract_ids($entity_type, $entity);

  // Generate the article id from the current entity and entity ID. Use the
  // entity's url instead of type:id because it will easier to handle in the
  // block implementation.
  $article_id = entity_uri($entity_type, $entity);
  $article_id = $article_id['path'];

  switch ($display['type']) {
    case 'livefyre_full':
      foreach ($items as $delta => $item) {
        if ($item['value']) {
          $element[$delta] = array(
            '#theme' => 'livefyre_formatter_full',
            '#entity' => $entity,
            '#article_id' => $article_id,
            '#widget_id' => "livefyre-entity-{$entity_type}-id-{$id}-field-{$field['id']}-{$delta}",
            '#title' => isset($entity->title) ? $entity->title : drupal_get_title(),
          );
        }
      }
      break;

    case 'livefyre_comments_number':
      foreach ($items as $delta => $item) {
        if ($item['value']) {
          $element[$delta] = array(
            '#theme' => 'livefyre_formatter_comments_number',
            '#article_id' => $article_id,
            '#site_id' => variable_get('livefyre_site_id'),
          );
        }
      }
      break;
  }

  return $element;
}
